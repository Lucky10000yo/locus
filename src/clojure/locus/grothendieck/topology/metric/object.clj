(ns locus.grothendieck.topology.metric.object
  (:require [locus.base.logic.core.set :refer :all]
            [locus.base.logic.limit.product :refer :all]
            [locus.elementary.relation.binary.product :refer :all]
            [locus.base.logic.structure.protocols :refer :all]
            [locus.elementary.copresheaf.core.protocols :refer :all]
            [locus.base.function.core.object :refer :all]))

; Objects in the category of metric spaces and short maps
; Every metric space is associated with a topological space, called its metric
; topology which is generated by the base of open balls. A pseudometric space
; is a metric space iff it is T0.
(deftype MetricSpace [coll distance]
  ConcreteObject
  (underlying-set [this] coll))

(derive MetricSpace :locus.base.logic.structure.protocols/structured-set)

(defn distance
  [metric a b]

  ((.distance metric) a b))

; The class of metric spaces is naturally partially ordered by distance, so that
; metrics with larger distances between each of there pairs of points are larger
; then one another. This metric is the fundamental partial order upon which
; the category of metric spaces and short maps is derived.
(defn submetric?
  [a b]

  (let [a-elements (underlying-set a)
        b-elements (underlying-set b)]
    (and
      (equal-universals? a-elements b-elements)
      (every?
        (fn [[x y]]
          (<= (distance a x y)
              (distance b x y)))
        (cartesian-power a-elements 2)))))

; Create a space of real vectors to be used with various metrics
(defn real-vector-space
  [n]

  (->Universal
    (fn [coll]
     (and
       (vector? coll)
       (= (count coll) n)
       (every? real-number? coll)))))

; The most common metric space
(defn euclidean-metric-space
  [n]

  (MetricSpace.
    (real-vector-space n)
    (fn [x y]
      (Math/sqrt
        (apply
          +
          (map
            (fn [i]
              (let [d (- (nth x i) (nth y i))]
                (* d d)))
            (range n)))))))

; The taxicab metric is another kind of metric on the real numbers
(defn taxicab-metric
  [n]

  (MetricSpace.
    (real-vector-space n)
    (fn [x y]
      (apply
        +
        (map
          (fn [i]
            (let [d (- (nth x n) (nth y n))]
              (if (neg? d) (- d) d)))
          (range n))))))

; Get the chebyshev metric on affine space
(defn chebyshev-metric
  [n]

  (MetricSpace.
    (real-vector-space n)
    (fn [x y]
      (apply
        max
        (map
          (fn [i]
            (let [d (- (nth x n) (nth y n))]
              (if (neg? d) (- d) d)))
          (range n))))))

; One dimensional and two dimensional euclidean spaces have corresponding
; apache commons math geometry
(def one-dimensional-euclidean-space
  (euclidean-metric-space 1))

(def two-dimensional-euclidean-space
  (euclidean-metric-space 2))

(def three-dimensional-euclidean-space
  (euclidean-metric-space 3))

; The discrete metric is a rather simple example in metric space theory
(defn discrete-metric
  [coll]

  (MetricSpace.
    coll
    (fn [x y]
      (if (= x y) 0 1))))
